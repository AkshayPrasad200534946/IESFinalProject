@page
@model ContactManager.Pages.Contacts.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<div class="card">
    <div class="card-body ">
 
<table class="table">
    <thead class="table-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Contact[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Contact[0].Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Contact[0].City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Contact[0].State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Contact[0].Zip)
            </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Contact[0].Mobile)
                    </th>
            <th>
                @Html.DisplayNameFor(model => model.Contact[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Contact[0].Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Contact) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Zip)
            </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Mobile)
                        </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                    @if ((await AuthorizationService.AuthorizeAsync(
                    User, item,
                            ContactOperations.Update)).Succeeded)
                    {
                                <a asp-page="./Edit" class="btn btn-primary" asp-route-id="@item.ContactId">Edit</a>
                        <text> | </text>
                    }

                            <a asp-page="./Details"  class="btn btn-secondary"  asp-route-id="@item.ContactId">Details</a>

                    @if ((await AuthorizationService.AuthorizeAsync(
                    User, item,
                    ContactOperations.Delete)).Succeeded)
                    {
                        <text> | </text>
                                <a asp-page="./Delete" class="btn btn-danger" asp-route-id="@item.ContactId">Delete</a>
                    }
                    </td>
        </tr>
}
    </tbody>
</table>

    </div>
</div>

<p class="text-center mt-4">
    <a asp-page="Create" class="btn btn-lg btn-success w-50 ">Create New</a>
</p>
